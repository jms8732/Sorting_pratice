package sort_project;

import java.awt.Color;
import java.util.*;

/*
 * 선택 정렬 동작 과정
 * 1. 
 */

public class SelectionThread extends Thread {
	private Point[] array;
	private Board b;
	private long TIME = 1;

	public SelectionThread(Point[] array) {
		this.array = new Point[array.length];

		for (int i = 0; i < array.length; i++) {
			this.array[i] = new Point(array[i].len, Color.white);
		}
		b = new Board(this.array);
	}

	public void run() {
		int least = 0;
		// 마지막 숫자는 정렬이 자동으로 되기때문에 array.len - 1 만큼 반복문
		for (int i = 0; i < array.length - 1; i++) {
			least = i; // 최솟값을 선택

			for (int j = i + 1; j < array.length; j++) {
				if (array[least].len < array[j].len) {
					least = j; // 최소 길이 선택
				}
			}
			
			if (least != i) {
				array[least].color = Color.red;
				array[i].color = Color.red;
				b.repaint(array);
				sleep();

				Point p = array[least];
				array[least] = array[i];
				array[i] = array[least];

				array[least].color = Color.white;
				array[i].color = Color.white;
				b.repaint(array);
				sleep();
			}
		}
	}

	private void sleep() {
		try {
			Thread.sleep(TIME);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
}
