package sort_project;

public class HeapThread extends baseThread implements Runnable {

	public HeapThread(int LEN, Point[] array, int x, int y) {
		super(LEN, array, "Heap Sort", x, y);
	}

	public void run() {
		int temp[] = { 5, 3, 2, 8, 6, 9 };
		heapSort(temp);
		
		for(int i : temp)
			System.out.print(i + " ");
	}
	
	private void heapSort(int [] temp) {
		buildTree(temp);
		
		for(int i = temp.length - 1; i >=0 ; i--) {
			swap(temp,temp[0],temp[i]);
			heapfy(temp,0);
		}
	}
	
	private void buildTree(int [] temp) {
		int size=  temp.length;
		for(int i = size / 2 -1;  i >= 0 ; i--) {
			heapfy(temp,i);
			for(int j : temp) {
				System.out.print(j + " ");
			}
		}
	}

	private void heapfy(int[] temp, int here) {
		int left = here * 2 + 1;
		int right = here * 2 + 2;
		int size = temp.length;
		int max = here;

		if (left < size && temp[left] > temp[here])
			max = left;

		if (right < size && temp[right] > temp[here])
			max = right;

		if (max != here) {
			swap(temp,max, here);
			heapfy(temp, max);
		}
	}

	private void swap(int[] array, int idx1, int idx2) {
		int temp = array[idx1];
		array[idx1] = array[idx2];
		array[idx2] = temp;
	}

}
